{"version":3,"sources":["Main.module.scss","Components/Input/Input.module.scss","Form.module.scss","Components/List/List.module.scss","Components/Button/Button.module.scss","Components/Modal/StoredFileSelectorModal.module.scss","Components/HTMLPreview/HTMLPreview.module.scss","Components/Spinner/Spinner.module.scss","Components/Button/Button.js","Components/Button/index.js","Components/Button/FileUploadButton.js","Components/Input/Input.js","Components/Input/index.js","Services/LoadFile.js","Components/Spinner/Spinner.js","Services/FilesStorage.js","HoC/WithStorageFiles/WithLocalStorage.js","HoC/WithStorageFiles/index.js","Components/List/List.js","Components/List/FilenameList.js","Components/Modal/StoredFileSelectorModal.js","Main.js","Services/HTMLParser.js","Components/HTMLPreview/HTMLPreview.js","Form.js","index.js","App.js"],"names":["module","exports","Button","props","className","secondary","rest","classNames","styles","button","join","defaultProps","onClick","FileUploadButton","onButtonClick","inputRef","current","click","React","createRef","this","onFileSelected","children","onChange","ref","id","type","name","style","display","Component","INPUT_TYPES","CONFIRMATION","Input","labelText","onFinishedClick","input","label","role","aria-label","defaultTypes","forwardRef","_input_types","url","fetch","method","mode","headers","Origin","window","location","origin","then","resp","text","file","Promise","resolve","reject","FileReader","tick","tack","reader","onload","evt","console","log","Date","now","readyState","result","toString","readAsText","Spinner","spinner","FilesStorage","storage","filesIndex","fileName","content","setItem","filesIndexContent","getItem","indexOf","split","withLocalStorage","WrappedComponent","localStorage","List","elements","onItemClick","list","map","item","index","key","anchor","state","filenames","onSelect","getAllFileNames","setState","StoredFileSelectorModal","closing","closeAndCall","callback","filename","setTimeout","onClose","modal","Main","filenameSelected","savingFile","isModalOpen","e","target","files","a","LoadFile","loadFromFile","fileContent","save","clearSelectedFile","onURLFinished","fileURL","value","loadFromURL","pop","switchModalState","handleFileSelectedFromStorage","navigateForward","history","push","app","column","row","disabled","opened","withRouter","config","maintainRatio","element","param1","param2","ratio","currentValue","newValue","Math","round","relationsMap","Map","set","htmlString","root","document","createElement","innerHTML","retElements","Object","keys","forEach","configKey","getElementsByTagName","parameters","extractElementInformation","sort","b","position","fields","html","tag","tagName","toLowerCase","idParam","params","uuid","param","ret","resolveStringParam","resolveObjectParam","replace","func","getOwnPropertyNames","includes","relation","Error","auxFunc","get","related","HTMLPreview","displayNewTemplate","open","write","fragment","elementsById","highlighter","nextProps","nextState","el","addEventListener","forceUpdate","vars","dangerouslySetInnerHTML","__html","changed","changedElement","getElementById","elementOffset","top","left","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","offset","height","offsetHeight","width","offsetWidth","opacity","keywords","href","img","src","findReplacement","keyword","parser","HTMLParserService","HTMLParserConfig","parseTemplate","searchParams","URLSearchParams","search","parseContent","inputChange","findIndex","field","relatedChange","relatedParamChange","inputChangeFactory","clearChanged","form__row","onBlur","ReactDOM","render","exact","path","component","Form"],"mappings":"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","file":"static/js/main.0c69b86d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Main_app__1unYv\",\"row\":\"Main_row__117Qf\",\"buttons-row\":\"Main_buttons-row__139-5\",\"go-button\":\"Main_go-button__2SQGC\",\"bpk-no-touch-support\":\"Main_bpk-no-touch-support__2w3fM\",\"column\":\"Main_column__2wbMz\",\"bpk-keyframe-spin\":\"Main_bpk-keyframe-spin__c05yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__267Jt\",\"input__button\":\"Input_input__button__jcXfw\",\"bpk-no-touch-support\":\"Input_bpk-no-touch-support__xiVno\",\"input-wrapper\":\"Input_input-wrapper__2t4Nb\",\"label\":\"Input_label__2uf_I\",\"bpk-keyframe-spin\":\"Input_bpk-keyframe-spin__2tYfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Form_app__2kLDl\",\"row\":\"Form_row__1PYqe\",\"form__row\":\"Form_form__row__DCI-R\",\"buttons-row\":\"Form_buttons-row__1ADLz\",\"go-button\":\"Form_go-button__2Mt1W\",\"bpk-no-touch-support\":\"Form_bpk-no-touch-support__18gD-\",\"column\":\"Form_column__34yFM\",\"bpk-keyframe-spin\":\"Form_bpk-keyframe-spin__1UyB5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__2lpsf\",\"list-item\":\"List_list-item__IE356\",\"anchor\":\"List_anchor__3_1JC\",\"bpk-no-touch-support\":\"List_bpk-no-touch-support__1hKA7\",\"bpk-keyframe-spin\":\"List_bpk-keyframe-spin__1nIuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__30zzF\",\"bpk-no-touch-support\":\"Button_bpk-no-touch-support__2JIPM\",\"button--secondary\":\"Button_button--secondary__3Pvzj\",\"bpk-keyframe-spin\":\"Button_bpk-keyframe-spin__gbdHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"StoredFileSelectorModal_modal__2p1he\",\"fade-in\":\"StoredFileSelectorModal_fade-in__fE-dN\",\"fade-out\":\"StoredFileSelectorModal_fade-out__Nc8v8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlighter\":\"HTMLPreview_highlighter__1YG42\",\"fade-in-out\":\"HTMLPreview_fade-in-out__1_qCo\",\"done-wrapper\":\"HTMLPreview_done-wrapper__1kpqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Zr7I\",\"rotate\":\"Spinner_rotate__fpSR2\"};","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\n\nimport styles from './Button.module.scss';\n\ntype Props = {|\n  secondary: boolean,\n  className: string,\n  children: Node,\n  onClick: (Event) => void,\n|}\n\nconst Button = (props: Props): React$Node => {\n  const { className, secondary, ...rest } = props;\n  const classNames = [ styles.button, secondary ? styles['button--secondary'] : '', className];\n  return <button {...rest} className={classNames.join(' ')}/>;\n};\n\nButton.defaultProps = {\n  secondary: false,\n  className: '',\n  onClick: () => {},\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;","// @flow\nimport React, { Component, Fragment } from 'react';\nimport type { ReactRef } from 'react-helpers';\nimport type { UploadFileEvent } from 'html-helpers';\n\nimport Button from './Button';\nimport type { Node } from 'react';\n\ntype Props = {\n  onFileSelected: (UploadFileEvent) => void,\n  children: Node,\n}\n\nclass FileUploadButton extends Component<Props> {\n  inputRef: ReactRef;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n  }\n\n  onButtonClick = (): void => {\n    if (this.inputRef.current) {\n      this.inputRef.current.click();\n    }\n  };\n\n  render() {\n    const { onFileSelected, children, ...rest } = this.props;\n    return <Fragment>\n      <Button onClick={this.onButtonClick} {...rest}>\n        {children}\n      </Button>\n      <input onChange={onFileSelected} ref={this.inputRef} id=\"file-input\" type=\"file\" name=\"file\" style={{ display: 'none' }}/>\n    </Fragment>;\n  }\n}\n\nexport default FileUploadButton;\n","// @flow\nimport React from 'react';\n\nimport styles from './Input.module.scss';\n\ntype Props = {\n  className: string,\n  labelText: string,\n  onFinishedClick: () => void,\n  type: string\n};\n\nexport const INPUT_TYPES = {\n  CONFIRMATION: 'confirmation',\n};\n\nconst Input = (props: Props, ref) => {\n  const { className, labelText, type, onFinishedClick, ...rest } = props;\n  const classNames = [styles.input, className];\n  return (<div>\n    <label className={styles.label}>\n      {labelText}\n    </label>\n    <div className={styles['input-wrapper']}>\n      <input {...rest} ref={ref} className={classNames.join(' ')} />\n      { type === INPUT_TYPES.CONFIRMATION && <button className={styles['input__button']} onClick={onFinishedClick}><span role=\"img\" aria-label=\"done\">👍</span></button> }\n    </div>\n  </div>);\n};\n\nInput.defaultTypes = {\n  className: '',\n  type: null,\n};\n\nexport default React.forwardRef<Props, HTMLInputElement>(Input);\n","import Input, { INPUT_TYPES as _input_types } from \"./Input\";\n\nexport const INPUT_TYPES = _input_types;\nexport default Input;","// @flow\nexport default class {\n  static loadFromURL(url: string): Promise<string> {\n    return fetch(url, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        Origin: window.location.origin,\n      },\n    })\n      .then(resp => resp.text())\n  }\n\n  static async loadFromFile(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!window.FileReader) {\n        return reject(\"Cannot read files with this browser\")\n      }\n      const reader = new FileReader();\n      let tick, tack;\n      reader.onload = (evt) => {\n        console.log(evt);\n        if (!tick){\n          console.log(\"Started loading file\");\n          tick = Date.now();\n        }\n        if (reader.readyState === 2) {\n          tack = Date.now();\n          console.log(\"File loaded in:\", tack - tick, \"milliseconds\");\n          resolve((reader.result || {}).toString());\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n}","import React from 'react';\n\nimport styles from './Spinner.module.scss';\n\nconst Spinner = () => <span className={styles.spinner} role=\"img\" aria-label=\"spinner\">🌀</span>;\n\nexport default Spinner;","// @flow\nclass FilesStorage {\n  filesIndex: string = 'index';\n  storage: Storage;\n\n  constructor(storage: Storage) {\n    this.storage = storage;\n  }\n\n  async save(fileName: string, content: string): Promise<any> {\n    this.storage.setItem(fileName, content);\n    let filesIndexContent: string = this.storage.getItem(this.filesIndex) || '';\n    if (!filesIndexContent) {\n      this.storage.setItem(this.filesIndex, fileName);\n    } else {\n      if (filesIndexContent.indexOf(fileName) === -1) {\n        filesIndexContent = `${filesIndexContent},${fileName}`;\n      }\n      this.storage.setItem(this.filesIndex, filesIndexContent);\n    }\n  }\n\n  async get(fileName: string): Promise<string> {\n    return this.storage.getItem(fileName) || '';\n  }\n\n  async getAllFileNames(): Promise<Array<string>> {\n    return (this.storage.getItem(this.filesIndex) || '').split(',');\n  }\n}\n\nexport default FilesStorage;\n","// @flow\nimport React from 'react';\nimport type { Component } from 'react';\nimport type { FilesStorage as FilesStorageType } from 'types/storage';\n\nimport FilesStorage from '../../Services/FilesStorage';\n\ntype withLocalStorageProps = {| storage: FilesStorageType |}\n\nfunction withLocalStorage<Props> (WrappedComponent: Class<Component<{| ...Props, ...withLocalStorageProps |}>>) {\n  const storage = new FilesStorage(localStorage);\n\n  return function WithLocalStorage(props: Props) {\n    return <WrappedComponent {...props} storage={storage}/>\n  };\n}\n\nexport default withLocalStorage;\n","import withLocalStorage from './WithLocalStorage';\n\nexport default withLocalStorage;\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\n\nimport styles from './List.module.scss';\n\ntype Props = {\n  elements: Array<string>,\n  onItemClick: (index: number) => void,\n}\n\nconst List = ({ elements, onItemClick } : Props): Node => (\n  <ul className={styles.list}>\n    {\n      elements.map((item: string, index: number) => (\n        <div key={item} className={styles.anchor} role=\"button\" onClick={() => onItemClick(index)}>\n          <li className={styles['list-item  ']}>\n            {item}\n          </li>\n        </div>\n      ))\n    }\n  </ul>\n);\n\nexport default List;\n","// @flow\nimport React, { Component } from 'react';\nimport type { FilesStorage } from 'types/storage';\n\nimport withLocalStorage from '../../HoC/WithStorageFiles';\nimport List from './List';\n\ntype State = {\n  filenames: Array<string>,\n};\n\ntype Props = {\n  storage: FilesStorage,\n  onSelect: (filename: string) => void,\n};\n\nclass FilenameList extends Component<Props, State> {\n  state = {\n    filenames: [],\n  };\n\n  onSelect = (index: number) => {\n    this.props.onSelect(this.state.filenames[index]);\n  };\n\n  render() {\n    const { filenames } = this.state;\n    return (\n      <List elements={filenames} onItemClick={this.onSelect}/>\n    )\n  }\n\n  async componentDidMount () {\n    console.log(this.props);\n    const filenames = await this.props.storage.getAllFileNames();\n    this.setState({\n      filenames,\n    });\n  }\n}\n\nexport default withLocalStorage(FilenameList);\n","import React, { Component } from 'react';\nimport Button from '../Button';\nimport FilenameList from '../List/FilenameList';\n\nimport styles from './StoredFileSelectorModal.module.scss';\n\ntype Props = {\n  onSelect: (filename: string) => void,\n  onClose: () => void,\n};\n\ntype State = {\n  closing: boolean,\n};\n\nclass StoredFileSelectorModal extends Component<Props, State> {\n  state = {\n    closing: false,\n  };\n\n  closeAndCall = (callback) => (filename: string) => {\n    this.setState({\n      closing: true,\n    }, () => {\n      setTimeout(callback, 300, filename);\n    })\n  };\n\n  render() {\n    const { onSelect, onClose } = this.props;\n    const { closing } = this.state;\n    return (\n      <div className={[styles.modal, closing && styles['fade-out']].join(' ')}>\n        <Button onClick={this.closeAndCall(onClose)}>Close</Button>\n        <FilenameList onSelect={this.closeAndCall(onSelect)}/>\n      </div>\n    )\n  }\n}\n\nexport default StoredFileSelectorModal;\n","// @flow\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport type { RouterHistory } from 'react-router-dom';\nimport type { FilesStorage } from 'types/storage';\n\nimport Button from './Components/Button';\nimport FileUploadButton from './Components/Button/FileUploadButton';\nimport Input, { INPUT_TYPES } from \"./Components/Input\";\nimport LoadFile from './Services/LoadFile';\nimport Spinner from './Components/Spinner/Spinner';\n\nimport withLocalStorage from './HoC/WithStorageFiles';\n\nimport styles from './Main.module.scss';\nimport StoredFileSelectorModal from './Components/Modal/StoredFileSelectorModal';\n\ntype State = {\n  filenameSelected: ?string,\n  savingFile: boolean,\n  isModalOpen: boolean\n}\n\ntype Props = {\n  history: RouterHistory,\n  storage: FilesStorage,\n};\n\ntype UploadFileEvent = {\n  target: {\n    files: FileList,\n  },\n};\n\ntype InputRef = {| current: null | HTMLInputElement |};\n\nclass Main extends Component<Props, State> {\n  inputRef: InputRef = React.createRef();\n  state: State = {\n    filenameSelected: null,\n    savingFile: false,\n    isModalOpen: false,\n  };\n\n  onFileSelected = (e: UploadFileEvent): void => {\n    const file: File = e.target.files[0];\n    this.setState({\n      savingFile: true,\n    }, async () => {\n      const fileContent = await LoadFile.loadFromFile(file);\n      await this.props.storage.save(file.name, fileContent);\n      this.setState({\n        savingFile: false,\n        filenameSelected: file.name,\n      });\n    })\n  };\n\n  clearSelectedFile = (): void => {\n    this.setState({\n      filenameSelected: null,\n    });\n  };\n\n  onURLFinished = (): void => {\n    if (this.inputRef.current) {\n      const fileURL: string = this.inputRef.current.value;\n      this.setState({\n        savingFile: true,\n      }, async () => {\n        const fileContent = await LoadFile.loadFromURL(fileURL);\n        const filename = fileURL.split('/').pop();\n        await this.props.storage.save(filename, fileContent);\n        this.setState({\n          savingFile: false,\n          filenameSelected: filename,\n        });\n      });\n    }\n  };\n\n  switchModalState = () => {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    })\n  };\n\n  handleFileSelectedFromStorage = async (filename: string) => {\n    this.setState({\n      filenameSelected: filename,\n    });\n  };\n\n  navigateForward = () => {\n    if (this.state.filenameSelected) {\n      this.props.history.push(`/form?file=${this.state.filenameSelected}`);\n    }\n  };\n\n  render() {\n    const { savingFile, filenameSelected, isModalOpen } = this.state;\n    return (\n      <div className={styles.app}>\n        <div className={styles.column}>\n          <h1>\n            Suilabs Signature templater app\n          </h1>\n        </div>\n\n        <div className={styles.column}>\n          {\n            savingFile\n              ? <div className={styles.row}><Spinner /></div>\n            : filenameSelected\n              ? <div className={styles.row}><h3>File selected: {filenameSelected}</h3></div>\n              : <Fragment>\n                  <div className={styles.row}>\n                    <h2>\n                      Use one of the options below to start with.\n                    </h2>\n                  </div>\n                  <div className={styles.row}>\n                    <FileUploadButton secondary onFileSelected={this.onFileSelected}>1. UploadTemplate</FileUploadButton>\n                  </div>\n                  <div className={styles.row}>\n                    <Input type={INPUT_TYPES.CONFIRMATION} ref={this.inputRef} onFinishedClick={this.onURLFinished} labelText=\"2. Template Url\"/>\n                  </div>\n                  <div className={styles.row}>\n                    <Button secondary onClick={this.switchModalState}>3. Choose Stored Template</Button>\n                  </div>\n              </Fragment>\n          }\n          <div className={[styles.row, filenameSelected && styles['buttons-row']].join(' ')}>\n            { filenameSelected && <Button onClick={this.clearSelectedFile}>Back</Button> }\n            <Button onClick={this.navigateForward} disabled={!filenameSelected}>\n              GO!\n            </Button>\n          </div>\n        </div>\n        { isModalOpen && <StoredFileSelectorModal opened={false} onSelect={this.handleFileSelectedFromStorage} onClose={this.switchModalState} /> }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withLocalStorage(Main));\n","// @flow\nimport uuid from 'uuid/v4';\nimport type { Field, BuildRelationFunction, RelationFunction, ObjectConfigParam, ParserConfig } from 'html-parsing';\n\nexport default class {\n  config: ParserConfig;\n  relationsMap: Map<string, BuildRelationFunction>;\n\n  constructor(config: ParserConfig) {\n    this.config = config;\n    this.relationsMap = new Map<string, BuildRelationFunction>();\n    this.relationsMap.set('maintainRatio', this.maintainRatio);\n  }\n\n  parseContent(htmlString: string):  { fields: Array<Field>, html: string }  {\n    const root = document.createElement('div');\n    root.innerHTML = htmlString;\n\n    const retElements = [];\n    const configKeys = Object.keys(this.config);\n    configKeys.forEach((configKey: string) => {\n      const elements = root.getElementsByTagName(configKey);\n      for (let element of elements) {\n        const parameters = this.extractElementInformation(element, root);\n        retElements.push(...parameters);\n      }\n    });\n    retElements.sort((a: Field, b: Field) => a.position - b.position);\n    return { fields: retElements, html: root.innerHTML };\n  }\n\n  extractElementInformation(element: any, root: HTMLDivElement): Array<Field> {\n    const tag = element.tagName.toLowerCase();\n    const { id: idParam, params } = this.config[tag];\n    if (!element.id && element[idParam]) {\n      element.id = element[idParam];\n    } else {\n      element.id = uuid();\n    }\n    const position = root.innerHTML.indexOf(element.id);\n    return params.map((param: string | ObjectConfigParam) => {\n      let ret = { id: element.id, tag, position };\n      if (typeof param === 'string') {\n        ret = { ...ret, ...this.resolveStringParam(element, param) };\n      } else {\n        ret = { ...ret, ...this.resolveObjectParam(element, param) };\n      }\n      return ret;\n    });\n  }\n\n  maintainRatio: BuildRelationFunction = (element: any, param1: string, param2: string): RelationFunction => {\n    const ratio = element[param1] / element[param2];\n    return (currentValue: number) => {\n      const newValue = Math.round(currentValue / ratio);\n      return { key: `${element.id}|${param2}`, value: newValue };\n    };\n  };\n\n  resolveStringParam(element: any, param: string): $Shape<Field> {\n    const value = element[param].replace(/[\\t\\n]/g,'');\n    return ({ param, value })\n  }\n\n  resolveObjectParam(element: any, param: ObjectConfigParam): $Shape<Field> {\n    const value = element[param.name];\n    let func: RelationFunction;\n    if (Object.getOwnPropertyNames(this).includes(param.relation)) {\n      const auxFunc: ?BuildRelationFunction = this.relationsMap.get(param.relation);\n      if (auxFunc) {\n        func = auxFunc(element, param.name, param.related);\n      }\n    } else {\n      throw new Error (`function '${param.relation}' not implemented`);\n    }\n    return ({ param: param.name, value, func })\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport type { Field, HTMLDocument } from 'html-parsing';\nimport type { ReactRef } from 'react-helpers';\n\nimport Button from '../Button';\n\nimport style from './HTMLPreview.module.scss';\n\ntype Props = {\n  html: string,\n  vars: Array<Field>,\n  changed: string,\n}\n\ntype State = {\n  fragment: HTMLElement,\n  elementsById: any,\n};\n\nfunction offset(el: ?HTMLElement): { top: number, left: number } {\n  if (!el) return { top: 0, left: 0 };\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || ((document: HTMLDocument).documentElement || {} ).scrollLeft;\n  const scrollTop = window.pageYOffset || ((document: HTMLDocument).documentElement || {} ).scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\n}\n\nclass HTMLPreview extends Component<Props, State> {\n  highlighter: ReactRef;\n\n  static defaultProps = {\n    html: '',\n    vars: {},\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      fragment: document.createElement('div'),\n      elementsById: {},\n    };\n    this.highlighter = React.createRef();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props): void {\n    let nextState;\n    const { fragment, elementsById } = this.state;\n    if (nextProps.html) {\n      fragment.innerHTML = nextProps.html;\n      for (let el of fragment.getElementsByTagName('*')) {\n        if (el.tagName === 'IMG') {\n          el.addEventListener('load', () => {\n            console.log('finished loading');\n            this.forceUpdate();\n          })\n        }\n        elementsById[el.id] = el;\n      }\n      nextState = {\n        fragment,\n      };\n    }\n    nextProps.vars.forEach(({ id, param, value }: Field) => {\n      elementsById[id][param] = value;\n    });\n    nextState = {\n      ...nextState,\n      elementsById,\n    };\n    if (!nextState) {\n      return;\n    }\n    this.setState(nextState);\n  }\n\n  displayNewTemplate = (): void => {\n    const newWindow: window = window.open();\n    newWindow.document.write(this.state.fragment.innerHTML);\n  };\n\n  render() {\n    if (!this.props.html) {\n      return '';\n    }\n    const { fragment } = this.state;\n    return <div>\n      <div className={style.highlighter} ref={this.highlighter} />\n      <div dangerouslySetInnerHTML={{ __html: fragment.innerHTML }}/>\n      <div className={style[\"done-wrapper\"]}>\n        <Button onClick={this.displayNewTemplate}>Done</Button>\n      </div>\n    </div>;\n  }\n\n  componentDidUpdate(): void {\n    if (this.highlighter.current && this.props.changed) {\n      setTimeout(() => {\n        const highlighter = this.highlighter.current || {};\n        const changedElement: ?HTMLElement = document.getElementById(this.props.changed);\n        const elementOffset = offset(changedElement);\n        highlighter.style.top = `${elementOffset.top}px`;\n        highlighter.style.left = `${elementOffset.left}px`;\n        highlighter.style.height = `${(changedElement || {}).offsetHeight}px`;\n        highlighter.style.width = `${(changedElement || {}).offsetWidth}px`;\n        highlighter.style.opacity = '1';\n      }, 250);\n    } else if (this.highlighter.current && !this.props.changed) {\n      this.highlighter.current.style.opacity = '0';\n    }\n  }\n}\n\n\nexport default HTMLPreview;\n","import React, { Component } from 'react';\nimport type { Field } from 'html-parsing';\n\nimport Input from './Components/Input';\nimport HTMLParserConfig from './HTMLParser.config';\nimport HTMLParserService from './Services/HTMLParser';\nimport Preview from './Components/HTMLPreview/HTMLPreview';\nimport withLocalStorage from './HoC/WithStorageFiles';\n\nimport style from './Form.module.scss';\n\ntype State = {\n  fields: Array<Field>,\n  changed: string,\n  html: string,\n}\n\nconst keywords = {\n  a: 'link',\n  href: 'url',\n  img: 'image',\n  src: 'source',\n  innerHTML: 'displayable text',\n  width: 'width',\n  height: 'height',\n};\n\nconst findReplacement = (keyword) => {\n  return keywords[keyword] || keyword;\n};\n\nclass Form extends Component<null, State> {\n  state = {\n    fields: [],\n    changed: null\n  };\n\n  parser = new HTMLParserService(HTMLParserConfig);\n\n  parseTemplate = async (location) => {\n    const searchParams = new URLSearchParams(location.search);\n    const filename = searchParams.get('file');\n    const fileContent = await this.props.storage.get(filename);\n    return this.parser.parseContent(fileContent);\n  };\n\n  async componentDidMount(): void {\n    const {fields, html} = await this.parseTemplate(this.props.location);\n    this.setState({\n      fields,\n      html,\n    });\n  }\n\n  inputChange = ({ target: { name, value } }: Event): void => {\n    const [id, param] = name.split('|');\n    const { fields } = this.state;\n    const index = fields.findIndex((field) => field.id === id && field.param === param);\n    fields[index] = {\n      ...fields[index],\n      value\n    };\n    this.setState({\n      fields,\n      changed: id,\n    });\n  };\n\n  relatedChange = (func) => ({ target: { name, value } }: Event): void => {\n    const relatedParamChange = func(value);\n    this.inputChange({target: { name, value }});\n    this.inputChange({target: { name: relatedParamChange.key, value: relatedParamChange.value }})\n  };\n\n  inputChangeFactory = (func) => {\n    console.log(func);\n    if (!func) {\n      return this.inputChange;\n    }\n    return this.relatedChange(func);\n  };\n\n  clearChanged = (): void => {\n    console.log('clear');\n    this.setState({\n      changed: null,\n    });\n  };\n\n  render() {\n    const { fields, html, changed } = this.state;\n    return (\n      <div className={style.app}>\n        <div className={style.column}>\n          <h2>Preview</h2>\n          <Preview html={html} vars={fields} changed={changed}/>\n        </div>\n        <div className={style.column}>\n          <h2>Template Data</h2>\n          {\n            fields.map(\n              (field: Field) => {\n                const key = `${field.id}|${field.param}`;\n                return (\n                  <div key={key} className={style.form__row}>\n                    <Input\n                      onChange={this.inputChangeFactory(field.func)}\n                      onBlur={this.clearChanged}\n                      labelText={`${findReplacement(field.tag)} ${findReplacement(field.param)}`}\n                      name={key} value={field.value}\n                    />\n                  </div>\n                )\n              }\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withLocalStorage(Form);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Main from './Main';\nimport Form from './Form';\n\nexport default () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/form\" component={Form} />\n    </Switch>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}